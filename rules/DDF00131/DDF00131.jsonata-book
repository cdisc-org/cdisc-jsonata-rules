[{"kind":1,"language":"markdown","value":"Import utility functions","outputs":[]},{"kind":2,"language":"jsonata","value":"$utils := $merge([$import(\"./utils/get_idmap.jsonata\")\r\n                 ,$import(\"./utils/get_maxids.jsonata\")\r\n                 ,$import(\"./utils/make_dup.jsonata\")\r\n                 ,$import(\"./utils/get_rule.jsonata\")\r\n                 ,$import(\"./utils/get_ref_value.jsonata\")\r\n                 ,$import(\"./utils/report.jsonata\")]) ","outputs":[]},{"kind":1,"language":"markdown","value":"Define test","outputs":[]},{"kind":2,"language":"jsonata","value":"$rule := $utils.get_rule($import(\"./rules/DDF00131/DDF00131.json\"))","outputs":[]},{"kind":1,"language":"markdown","value":"Create test data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    /***********************************************************************\\\r\n    * Use the CDISC Pilot data as a start point                             *\r\n    \\***********************************************************************/\r\n\r\n    $old_study :=   $loadFile(\"./testdata/CDISC_Pilot_Study_v3.json\");\r\n\r\n    /***********************************************************************\\\r\n    * Write out as positive unit test data.                                 *\r\n    \\***********************************************************************/\r\n    $writeFile(\"./rules/DDF00131/unit-test-coreid-DDF00131-positive.json\",$old_study);\r\n    \r\n    /***********************************************************************\\\r\n    * Add the following invalid references and then write out as negative   *\r\n    * unit test data:                                                       *\r\n    * - A partial usdm:ref where the klass specification is missing         *\r\n    * - An invalid usdm:ref where the referenced id value does not exist    *\r\n    \\***********************************************************************/\r\n    $new_study3 :=  $old_study\r\n                    ~> |study.documentedBy[0].versions[0].contents[id=\"NarrativeContent_2\"]|\r\n                        {\r\n                            \"text\": $replace(\r\n                                        text,\r\n                                        /<usdm:ref attribute=\\\"studyIdentifier\\\" id=\\\"StudyIdentifier_1\\\" klass=\\\"StudyIdentifier\\\"><\\/usdm:ref>/,\r\n                                        \"<usdm:ref attribute=\\\"studyIdentifier\\\" id=\\\"StudyIdentifier_1\\\"></usdm:ref>\"\r\n                                    )\r\n                        }|\r\n                    ~> |study.documentedBy[0].versions[0].contents[id=\"NarrativeContent_16\"]|\r\n                        {\r\n                            \"text\": $replace(\r\n                                        text,\r\n                                        /EligibilityCriterion_12/,\r\n                                        \"EligibilityCriterion_xx\")\r\n                        }|;\r\n    $writeFile(\"./rules/DDF00131/unit-test-coreid-DDF00131-negative.json\",$new_study3);\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test positive data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $pos_data := $loadFile(\"./rules/DDF00131/unit-test-coreid-DDF00131-positive.json\");\r\n    $utils.report($rule,$pos_data);\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test negative data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $neg_data := $loadFile(\"./rules/DDF00131/unit-test-coreid-DDF00131-negative.json\");\r\n    $utils.report($rule,$neg_data)\r\n)","outputs":[]}]