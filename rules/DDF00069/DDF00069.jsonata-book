[{"kind":1,"language":"markdown","value":"Import utility functions","outputs":[]},{"kind":2,"language":"jsonata","value":"$utils := $merge([$import(\"./utils/get_idmap.jsonata\")\r\n                 ,$import(\"./utils/get_maxids.jsonata\")\r\n                 ,$import(\"./utils/make_dup.jsonata\")\r\n                 ,$import(\"./utils/get_rule.jsonata\")\r\n                 ,$import(\"./utils/report.jsonata\")]) ","outputs":[]},{"kind":1,"language":"markdown","value":"Define test","outputs":[]},{"kind":2,"language":"jsonata","value":"$rule := $import(\"./rules/DDF00069/DDF00069.jsonata\")","outputs":[]},{"kind":1,"language":"markdown","value":"Create test data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    /***********************************************************************\\\r\n    * Use the v4 CDISC Pilot data as a start point                             *\r\n    \\***********************************************************************/\r\n\r\n    $old_study1 :=   $loadFile(\"./testdata/CDISC_Pilot_Study.json\");\r\n\r\n    /***********************************************************************\\\r\n    * Create and insert a copy of the first study design as an              *\r\n    * observational study design.                                           *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($old_study1);\r\n    $idmap := $utils.get_idmap($old_study1.study.versions[0].studyDesigns[0],$maxids);\r\n    $new_sd1 := $utils.make_dup($old_study1.study.versions[0].studyDesigns[0],$idmap)\r\n                ~> |$|{\r\n                        \"id\": \"ObservationalStudyDesign_1\",\r\n                        \"instanceType\": \"ObservationalStudyDesign\",\r\n                        \"name\": \"Study Design 2\",\r\n                        \"description\": \"An observational design for the study\",\r\n                        \"timePerspective\": (blindingSchema.standardCode ~> |$|{\"code\": \"C15273\",\"decode\": \"PROSPECTIVE\"}|)\r\n                      },[\"blindingSchema\",\"intentTypes\",\"subTypes\"]|\r\n                ~> |studyType|{\"code\": \"C16084\", \"decode\": \"OBSERVATIONAL\"}|\r\n                ~> |model|{\"code\": \"C15208\", \"decode\": \"COHORT\"}|;\r\n    $new_study1 := $old_study1\r\n                ~> |study.versions[0]|{\"studyDesigns\": $append(studyDesigns,$new_sd1)}|;\r\n\r\n    /***********************************************************************\\\r\n    * Write out as positive unit test data.                                 *\r\n    \\***********************************************************************/\r\n    $writeFile(\"./rules/DDF00069/unit-test-coreid-DDF00069-positive-1.json\",$new_study1);\r\n    \r\n    /***********************************************************************\\\r\n    * Make the following changes and write out as negative unit test data:  *\r\n    * - In the first study design, set the epochId of the second study cell *\r\n    *   to be the same as the epochId of the first study cell.              *\r\n    * - In the second study design, set the armId of the last study cell to *\r\n    *   be the same as the armId of the first study cell.                   *\r\n    \\***********************************************************************/\r\n    $new_study2 :=  $new_study1\r\n                    ~> |study.versions[0].studyDesigns[0].studyCells[1]|\r\n                        {\r\n                            \"epochId\": $$.study.versions[0].studyDesigns[0].studyCells[0].epochId\r\n                        }|\r\n                    ~> |study.versions[0].studyDesigns[1].studyCells[-1]|\r\n                        {\r\n                            \"armId\": $$.study.versions[0].studyDesigns[1].studyCells[0].armId\r\n                        }|;\r\n                        \r\n    $writeFile(\"./rules/DDF00069/unit-test-coreid-DDF00069-negative-1.json\",$new_study2);\r\n\r\n    /***********************************************************************\\\r\n    * Use the v3 CDISC Pilot data as a start point                             *\r\n    \\***********************************************************************/\r\n\r\n    $old_study2 :=  $loadFile(\"./testdata/CDISC_Pilot_Study_v3.json\");\r\n\r\n    /***********************************************************************\\\r\n    * Create and insert a copy of the first study design.                   *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($old_study2);\r\n    $idmap := $utils.get_idmap($old_study2.study.versions[0].studyDesigns[0],$maxids);\r\n    $new_sd2 := $utils.make_dup($old_study2.study.versions[0].studyDesigns[0],$idmap)\r\n                ~> |$|{\r\n                        \"name\": \"Study Design 2\",\r\n                        \"description\": \"A secondary design for the study\"\r\n                    }|;\r\n    $new_study2 := $old_study2\r\n                ~> |study.versions[0]|{\"studyDesigns\": $append(studyDesigns,$new_sd2)}|;\r\n\r\n    /***********************************************************************\\\r\n    * Write out as positive unit test data.                                 *\r\n    \\***********************************************************************/\r\n    $writeFile(\"./rules/DDF00069/unit-test-coreid-DDF00069-positive-2.json\",$new_study2);\r\n\r\n    /***********************************************************************\\\r\n    * Make the following changes and write out as negative unit test data:  *\r\n    * - In the first study design, set the epochId of the second study cell *\r\n    *   to be the same as the epochId of the first study cell.              *\r\n    * - In the second study design, set the armId of the last study cell to *\r\n    *   be the same as the armId of the first study cell.                   *\r\n    \\***********************************************************************/\r\n    $new_study3 :=  $new_study2\r\n                    ~> |study.versions[0].studyDesigns[0].studyCells[1]|\r\n                        {\r\n                            \"epochId\": $$.study.versions[0].studyDesigns[0].studyCells[0].epochId\r\n                        }|\r\n                    ~> |study.versions[0].studyDesigns[1].studyCells[-1]|\r\n                        {\r\n                            \"armId\": $$.study.versions[0].studyDesigns[1].studyCells[0].armId\r\n                        }|;\r\n                        \r\n    $writeFile(\"./rules/DDF00069/unit-test-coreid-DDF00069-negative-2.json\",$new_study3);\r\n\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test positive data - v4","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $pos_data := $loadFile(\"./rules/DDF00069/unit-test-coreid-DDF00069-positive-1.json\");\r\n    $utils.report($rule,$pos_data);\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test negative data - v4","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $neg_data := $loadFile(\"./rules/DDF00069/unit-test-coreid-DDF00069-negative-1.json\");\r\n    $utils.report($rule,$neg_data)\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test positive data - v3","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $pos_data := $loadFile(\"./rules/DDF00069/unit-test-coreid-DDF00069-positive-2.json\");\r\n    $utils.report($rule,$pos_data);\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test negative data - v3","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $neg_data := $loadFile(\"./rules/DDF00069/unit-test-coreid-DDF00069-negative-2.json\");\r\n    $utils.report($rule,$neg_data)\r\n)","outputs":[]}]