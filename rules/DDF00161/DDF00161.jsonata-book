[{"kind":1,"language":"markdown","value":"Import utility functions","outputs":[]},{"kind":2,"language":"jsonata","value":"$utils := $merge([$import(\"./utils/get_idmap.jsonata\")\r\n                 ,$import(\"./utils/get_maxids.jsonata\")\r\n                 ,$import(\"./utils/make_dup.jsonata\")\r\n                 ,$import(\"./utils/get_rule.jsonata\")\r\n                 ,$import(\"./utils/report.jsonata\")]) ","outputs":[]},{"kind":1,"language":"markdown","value":"Define test","outputs":[]},{"kind":2,"language":"jsonata","value":"$rule := $utils.get_rule($import(\"./rules/DDF00161/DDF00161.json\"))","outputs":[]},{"kind":1,"language":"markdown","value":"Create test data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    /***********************************************************************\\\r\n    * Use the CDISC Pilot data as a start point                             *\r\n    \\***********************************************************************/\r\n\r\n    $old_study :=   $loadFile(\"./testdata/CDISC_Pilot_Study.json\");\r\n\r\n    /***********************************************************************\\\r\n    * Create and insert a copy of an activity with valid childIds           *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($old_study);\r\n    $idmap := $utils.get_idmap($old_study.**.studyDesigns[0].activities[id=\"Activity_36\"],$maxids);\r\n    $new_act1 := $utils.make_dup($old_study.**.studyDesigns[0].activities[id=\"Activity_36\"],$idmap)\r\n                ~> |$|  {\r\n                            \"name\": \"Vital Signs Process\",\r\n                            \"label\": \"Vital signs supine then standing\",\r\n                            \"childIds\": [\"Activity_33\",\"Activity_34\",\"Activity_35\",\"Activity_36\"],\r\n                            \"biomedicalConceptIds\": [],\r\n                            \"previousId\": \"Activity_32\",\r\n                            \"nextId\": \"Activity_33\"\r\n                        }|;\r\n    $new_study1 :=  $old_study\r\n                    ~> |study.versions[0].studyDesigns[0]|{\"activities\": $append(activities,$new_act1)}|\r\n                    ~> |study.versions[0].studyDesigns[0].activities[id=\"Activity_32\"]|{\"nextId\": $new_act1.id}|\r\n                    ~> |study.versions[0].studyDesigns[0].activities[id=\"Activity_33\"]|{\"previousId\": $new_act1.id}|;\r\n\r\n    /***********************************************************************\\\r\n    * Create and insert a copy of an activity as the last activity          *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($new_study1);\r\n    $idmap := $utils.get_idmap($new_study1.**.studyDesigns[0].activities[id=\"Activity_36\"],$maxids);\r\n    $new_act2 := $utils.make_dup($new_study1.**.studyDesigns[0].activities[id=\"Activity_36\"],$idmap)\r\n                ~> |$|  {\r\n                            \"name\": \"LAST\",\r\n                            \"label\": \"Last activity\",\r\n                            \"childIds\": [],\r\n                            \"biomedicalConceptIds\": [],\r\n                            \"previousId\": \"Activity_36\",\r\n                            \"nextId\": null\r\n                        }|;\r\n    $new_study2 :=  $new_study1\r\n                    ~> |study.versions[0].studyDesigns[0]|{\"activities\": $append(activities,$new_act2)}|\r\n                    ~> |study.versions[0].studyDesigns[0].activities[id=\"Activity_36\"]|{\"nextId\": $new_act2.id}|;\r\n\r\n    /***********************************************************************\\\r\n    * Create and insert a second study design as a copy of the first        *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($new_study2);\r\n    $idmap := $utils.get_idmap($new_study2.**.studyDesigns[0],$maxids);\r\n    $new_sd := $utils.make_dup($new_study2.**.studyDesigns[0],$idmap);\r\n    $new_study3 :=  $new_study2\r\n                    ~> |study.versions[0]|{\"studyDesigns\": $append(studyDesigns,$new_sd)}|;\r\n\r\n    /***********************************************************************\\\r\n    * Write out as positive unit test data.                                 *\r\n    \\***********************************************************************/\r\n    $writeFile(\"./rules/DDF00161/unit-test-coreid-DDF00161-positive.json\",$new_study3);\r\n    \r\n    /***********************************************************************\\\r\n    * Add invalid childIds to the new activity in the first study design    *\r\n    * (including the id of an activity from the second study design and an  *\r\n    * non-existent id value) and write out as negative unit test data.       *\r\n    \\***********************************************************************/\r\n    $new_study4 :=  $new_study3\r\n                    ~> |study.versions[0].studyDesigns[0].activities[id=$new_act1.childIds[0]]|{\"previousId\": $new_act1.previousId}|\r\n                    ~> |study.versions[0].studyDesigns[1].activities[id=$lookup($idmap,$new_act1.id)]|{\"nextId\": $lookup($idmap,$new_act2.id)}|\r\n                    ~> |study.versions[0].studyDesigns[1].activities[id=$lookup($idmap,$new_act2.id)]|{\"previousId\": $lookup($idmap,$new_act1.id)}|;\r\n    $writeFile(\"./rules/DDF00161/unit-test-coreid-DDF00161-negative.json\",$new_study4);\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test positive data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $pos_data := $loadFile(\"./rules/DDF00161/unit-test-coreid-DDF00161-positive.json\");\r\n    $utils.report($rule,$pos_data);\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test negative data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $neg_data := $loadFile(\"./rules/DDF00161/unit-test-coreid-DDF00161-negative.json\");\r\n    $utils.report($rule,$neg_data)\r\n)","outputs":[]}]