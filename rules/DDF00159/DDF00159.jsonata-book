[{"kind":1,"language":"markdown","value":"Import utility functions","outputs":[]},{"kind":2,"language":"jsonata","value":"$utils := $merge([$import(\"./utils/get_idmap.jsonata\")\r\n                 ,$import(\"./utils/get_maxids.jsonata\")\r\n                 ,$import(\"./utils/make_dup.jsonata\")\r\n                 ,$import(\"./utils/get_rule.jsonata\")\r\n                 ,$import(\"./utils/report.jsonata\")]) ","outputs":[]},{"kind":1,"language":"markdown","value":"Define test","outputs":[]},{"kind":2,"language":"jsonata","value":"$rule := $utils.get_rule($import(\"./rules/DDF00159/DDF00159.json\"))","outputs":[]},{"kind":1,"language":"markdown","value":"Create test data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    /***********************************************************************\\\r\n    * Use the CDISC Pilot data as a start point                             *\r\n    \\***********************************************************************/\r\n\r\n    $old_study := $loadFile(\"./testdata/CDISC_Pilot_Study.json\");\r\n\r\n    /***********************************************************************\\\r\n    * Create a copy of the first study design's population and insert it as *\r\n    * the first cohort for the population.                                  *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($old_study);\r\n    $idmap := $utils.get_idmap($old_study.**.studyDesigns[0].population,$maxids);\r\n    $new_cohort1 := $utils.make_dup($old_study.**.studyDesigns[0].population,$idmap) ~> |$|\r\n        {\r\n            \"id\": \"StudyCohort_1\",\r\n            \"name\": \"COHORT1\",\r\n            \"instanceType\": \"StudyCohort\"\r\n        },[\"plannedSex\",\"plannedEnrollmentNumber\",\"plannedCompletionNumber\",\"cohorts\"]| ~> |plannedAge.maxValue|{\"value\": 75}|;\r\n    $new_study1 := $old_study ~> |study.versions[0].studyDesigns[0].population|{\"cohorts\": $append(cohorts,$new_cohort1)}|;\r\n\r\n    /***********************************************************************\\\r\n    * Duplicate the cohort created in the previous step to create the       *\r\n    * second cohort for the population.                                     *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($new_study1);\r\n    $idmap := $utils.get_idmap($new_study1.**.studyDesigns[0].population.cohorts[0],$maxids);\r\n    $new_cohort2 := $utils.make_dup($new_study1.**.studyDesigns[0].population.cohorts[0],$idmap) ~> |$|\r\n        {\r\n            \"name\": \"COHORT2\"\r\n        }| ~> |plannedAge.minValue|{\"value\": 76}| ~> |plannedAge.maxValue|{\"value\": 100}|;\r\n    $new_study2 := $new_study1 \r\n                    ~> |study.versions[0].studyDesigns[0].population|{\"cohorts\": $append(cohorts,$new_cohort2)},[\"plannedAge\"]|;\r\n                    \r\n    /***********************************************************************\\\r\n    * Create and insert a copy of the first study design as an              *\r\n    * observational study design, while removing all eligibility criteria   *\r\n    * for both study designs' populations except:                           *\r\n    * - the first 2 eligibility criteria for the 1st study design's         *\r\n    *   population.                                                         *\r\n    * - the last 2 eligibility criteria for the 2nd study design's          *\r\n    *   population.                                                         *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($new_study2);\r\n    $idmap := $utils.get_idmap($new_study2.study.versions[0].studyDesigns[0],$maxids);\r\n    $new_sd1 := $utils.make_dup($new_study2.study.versions[0].studyDesigns[0],$idmap)\r\n                ~> |$|{\r\n                        \"id\": \"ObservationalStudyDesign_1\",\r\n                        \"instanceType\": \"ObservationalStudyDesign\",\r\n                        \"name\": \"Study Design 2\",\r\n                        \"description\": \"An observational design for the study\",\r\n                        \"timePerspective\": (blindingSchema.standardCode ~> |$|{\"code\": \"C15273\",\"decode\": \"PROSPECTIVE\"}|)\r\n                      },[\"blindingSchema\",\"intentTypes\",\"subTypes\"]|\r\n                ~> |studyType|{\"code\": \"C16084\", \"decode\": \"OBSERVATIONAL\"}|\r\n                ~> |model|{\"code\": \"C15208\", \"decode\": \"COHORT\"}|;\r\n    $new_study3 := $new_study2\r\n                ~> |study.versions[0]|{\"studyDesigns\": $append(studyDesigns,$new_sd1)}|\r\n                ~> |study.versions[0].studyDesigns[0].population|{\"criterionIds\": criterionIds#$i[$i<2]}|\r\n                ~> |study.versions[0].studyDesigns[1].population|{\"criterionIds\": ($mxi:=$count(criterionIds)-1;criterionIds#$i[$i>$mxi-2])}|;\r\n\r\n    /***********************************************************************\\\r\n    * Add correct population references to the arms in study design, remove *\r\n    * - the first eligility criterion for the 1st study design's 2nd cohort *\r\n    * - the last eligility criterion for the 2nd study design's 2nd cohort  *\r\n    * and write out as negative unit test data because:                     *\r\n    * - The 1st eligibility criterion for the first study design's          *\r\n    *   population is also used for its 1st cohort.                         *\r\n    * - The 2nd eligibility criterion for the first study design's          *\r\n    *   population is also used for both its cohorts.                       *\r\n    * - The 1st eligibility criterion for the second study design's         *\r\n    *   population is also used for both its cohorts.                       *\r\n    * - The 2nd eligibility criterion for the second study design's         *\r\n    *   population is also used for its 1st cohort.                         *\r\n    \\***********************************************************************/\r\n    $cohort_ids1 := $new_study3.study.versions[0].studyDesigns[0].population.cohorts.id;\r\n    $cohort_ids2 := $new_study3.study.versions[0].studyDesigns[1].population.cohorts.id;\r\n    $new_study4 := $new_study3 ~> |study.versions[0].studyDesigns[0].arms[[1,2]]|{\"populationIds\": $cohort_ids1}|\r\n                               ~> |study.versions[0].studyDesigns[1].arms[[1,2]]|{\"populationIds\": $cohort_ids2}|\r\n                               ~> |study.versions[0].studyDesigns[0].population.cohorts[1]|{\"criterionIds\": criterionIds#$i[$i>0]}|\r\n                               ~> |study.versions[0].studyDesigns[1].population.cohorts[1]|\r\n                                   {\"criterionIds\": ($mxi:=$count(criterionIds)-1;criterionIds#$i[$i<$mxi])}|;\r\n    $writeFile(\"./rules/DDF00159/unit-test-coreid-DDF00159-negative.json\",$new_study4);\r\n    \r\n    /***********************************************************************\\\r\n    * Remove eligility criterion references from the study designs'         *\r\n    * populations and write out as positive unit test data.                 *\r\n    \\***********************************************************************/\r\n    $pop2_id := [$new_study2.study.versions[0].studyDesigns[0].population.id];\r\n    $new_study5 := $new_study4 ~> |study.versions[0].studyDesigns.population|{\"criterionIds\": []}|;\r\n    $writeFile(\"./rules/DDF00159/unit-test-coreid-DDF00159-positive.json\",$new_study5);\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test positive data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $pos_data := $loadFile(\"./rules/DDF00159/unit-test-coreid-DDF00159-positive.json\");\r\n    $utils.report($rule,$pos_data);\r\n)","outputs":[]},{"kind":1,"language":"markdown","value":"Test negative data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $neg_data := $loadFile(\"./rules/DDF00159/unit-test-coreid-DDF00159-negative.json\");\r\n    $utils.report($rule,$neg_data)\r\n\r\n)","outputs":[]}]