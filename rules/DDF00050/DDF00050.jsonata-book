[{"kind":1,"language":"markdown","value":"Define test","outputs":[]},{"kind":2,"language":"jsonata","value":"$rule := $import(\"./rules/DDF00050/DDF00050.jsonata\")","outputs":[{"mime":"text/x-json","value":{"ddf00050":{"_jsonata_lambda":true,"input":{},"environment":{"timestamp":"2025-06-03T11:51:38.532Z","async":false,"isParallelCall":false,"global":{"ancestry":[null]}},"arguments":[{"value":"data","type":"variable","position":34}],"body":{"type":"path","steps":[{"type":"block","position":77,"expressions":[{"type":"path","steps":[{"value":"data","type":"variable","position":82},{"value":"**","type":"descendant","position":85},{"value":"studyDesigns","type":"name","position":98}]}],"focus":"s","tuple":true},{"type":"unary","value":"[","position":130,"expressions":[{"type":"path","steps":[{"value":"s","type":"variable","position":162},{"value":"arms","type":"name","position":167},{"value":"populationIds","type":"name","position":181,"stages":[{"type":"filter","expr":{"type":"binary","value":"and","position":207,"lhs":{"type":"binary","value":"!=","position":186,"lhs":{"value":"","type":"variable","position":183},"rhs":{"type":"path","steps":[{"value":"s","type":"variable","position":189},{"value":"population","type":"name","position":200},{"value":"id","type":"name","position":203}]}},"rhs":{"type":"function","value":"(","position":213,"arguments":[{"type":"binary","value":"in","position":217,"lhs":{"value":"","type":"variable","position":214},"rhs":{"type":"path","steps":[{"value":"s","type":"variable","position":220},{"value":"population","type":"name","position":231},{"value":"cohorts","type":"name","position":239},{"value":"id","type":"name","position":242}]}}],"procedure":{"value":"not","type":"variable","position":212}}},"position":182}],"ancestor":{"label":"!0","level":0,"index":2},"tuple":true},{"type":"unary","value":"{","position":276,"seekingParent":[{"label":"!0","level":0,"index":0},{"label":"!0","level":0,"index":1},{"label":"!0","level":0,"index":2}],"lhs":[[{"value":"message","type":"string","position":315},{"value":"The study arm references a populationId that does not match the id of any study population or study cohort defined within the same study design as the study arm","type":"string","position":479}],[{"value":"parent_id","type":"string","position":521},{"type":"path","steps":[{"value":"s","type":"variable","position":525},{"value":"id","type":"name","position":528}]}],[{"value":"parent_entity","type":"string","position":574},{"type":"path","steps":[{"value":"s","type":"variable","position":578},{"value":"instanceType","type":"name","position":591}]}],[{"value":"id","type":"string","position":626},{"type":"path","steps":[{"type":"parent","slot":{"label":"!0","level":0,"index":0}},{"value":"id","type":"name","position":632}],"seekingParent":[{"label":"!0","level":0,"index":0},{"label":"!0","level":0,"index":1},{"label":"!0","level":0,"index":2}]}],[{"value":"name","type":"string","position":669},{"type":"path","steps":[{"type":"parent","slot":{"label":"!0","level":0,"index":1}},{"value":"name","type":"name","position":677}],"seekingParent":[{"label":"!0","level":0,"index":1}]}],[{"value":"populationId","type":"string","position":722},{"value":"","type":"variable","position":725}],[{"value":"instanceType","type":"string","position":770},{"type":"path","steps":[{"type":"parent","slot":{"label":"!0","level":0,"index":2}},{"value":"instanceType","type":"name","position":786}],"seekingParent":[{"label":"!0","level":0,"index":2}]}]]}]}],"consarray":true}]}}}}]},{"kind":1,"language":"markdown","value":"Create test data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    /***********************************************************************\\\r\n    * Import utility functions                                              *\r\n    \\***********************************************************************/\r\n    $utils := $merge([$import(\"./utils/get_idmap.jsonata\")\r\n                     ,$import(\"./utils/get_maxids.jsonata\")\r\n                     ,$import(\"./utils/make_dup.jsonata\")]);\r\n\r\n    /***********************************************************************\\\r\n    * Use the CDISC Pilot data as a start point                             *\r\n    \\***********************************************************************/\r\n\r\n    $old_study := $loadFile(\"./testdata/CDISC_Pilot_Study.json\");\r\n\r\n    /***********************************************************************\\\r\n    * Create and insert a second study design as a copy of the first        *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($old_study);\r\n    $idmap := $utils.get_idmap($old_study.**.studyDesigns[0],$maxids);\r\n    $new_sd := $utils.make_dup($old_study.**.studyDesigns[0],$idmap);\r\n    $new_study1 := $old_study ~> |study.versions[0]|{\"studyDesigns\": $append(studyDesigns,$new_sd)}|;\r\n\r\n    /***********************************************************************\\\r\n    * Create a copy of the first study design's population and insert it as *\r\n    * the first cohort for the (new) second study design.                   *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($new_study1);\r\n    $idmap := $utils.get_idmap($new_study1.**.studyDesigns[0].population,$maxids);\r\n    $new_cohort1 := $utils.make_dup($new_study1.**.studyDesigns[0].population,$idmap) ~> |$|\r\n        {\r\n            \"id\": \"StudyCohort_1\",\r\n            \"name\": \"COHORT1\",\r\n            \"instanceType\": \"StudyCohort\"\r\n        },[\"plannedSex\",\"plannedEnrollmentNumber\",\"plannedCompletionNumber\",\"criterionIds\",\"cohorts\"]| ~> |plannedAge.maxValue|{\"value\": 75}|;\r\n    $new_study2 := $new_study1 ~> |study.versions[0].studyDesigns[1].population|{\"cohorts\": $append(cohorts,$new_cohort1)}|;\r\n\r\n    /***********************************************************************\\\r\n    * Duplicate the cohort created in the previous step to create the       *\r\n    * second cohort for the (new) second study design.                      *\r\n    \\***********************************************************************/\r\n    $maxids := $utils.get_maxids($new_study2);\r\n    $idmap := $utils.get_idmap($new_study2.**.studyDesigns[1].population.cohorts[0],$maxids);\r\n    $new_cohort2 := $utils.make_dup($new_study2.**.studyDesigns[1].population.cohorts[0],$idmap) ~> |$|\r\n        {\r\n            \"name\": \"COHORT2\"\r\n        }| ~> |plannedAge.minValue|{\"value\": 76}| ~> |plannedAge.maxValue|{\"value\": 100}|;\r\n    $new_study3 := $new_study2 \r\n                    ~> |study.versions[0].studyDesigns[1].population|{\"cohorts\": $append(cohorts,$new_cohort2)},[\"plannedAge\"]|;\r\n                    \r\n    /***********************************************************************\\\r\n    * Add incorrect population references to the arms in the first and      *\r\n    * second study designs and write out as negative unit test data.        *\r\n    \\***********************************************************************/\r\n    $pop1_id := [$new_study3.study.versions[0].studyDesigns[0].population.id];\r\n    $cohort_ids := $new_study3.study.versions[0].studyDesigns[1].population.cohorts.id;\r\n    $new_study4 := $new_study3 ~> |study.versions[0].studyDesigns[0].arms[id]|{\"populationIds\": $pop1_id}|\r\n                               ~> |study.versions[0].studyDesigns[1].arms[[1,2]]|{\"populationIds\": $cohort_ids}|;\r\n    $writeFile(\"./rules/DDF00050/DDF00050-positive.json\",$new_study4);\r\n    \r\n    /***********************************************************************\\\r\n    * Add correct population references to the arms in the first and second *\r\n    * study designs and write out as positive unit test data.               *\r\n    \\***********************************************************************/\r\n    $pop2_id := [$new_study3.study.versions[0].studyDesigns[1].population.id];\r\n    $new_study5 := $new_study3 ~> |study.versions[0].studyDesigns[0].arms[0]|{\"populationIds\": $pop2_id}|\r\n                               ~> |study.versions[0].studyDesigns[0].arms[1]|{\"populationIds\": [$pop1_id,$cohort_ids[0]]}|\r\n                               ~> |study.versions[0].studyDesigns[0].arms[2]|{\"populationIds\": $append($cohort_ids,[\"StudyCohort_xx\"])}|\r\n                               ~> |study.versions[0].studyDesigns[1].arms[0]|{\"populationIds\": [$pop1_id,$cohort_ids]}|;\r\n    $writeFile(\"./rules/DDF00050/DDF00050-negative.json\",$new_study5);\r\n)","outputs":[{"mime":"text/x-json","value":"undefined"}]},{"kind":1,"language":"markdown","value":"Test positive data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $pos_data := $loadFile(\"./rules/DDF00050/DDF00050-positive.json\");\r\n    $rule.ddf00050($pos_data)\r\n)","outputs":[{"mime":"text/x-json","value":"undefined"}]},{"kind":1,"language":"markdown","value":"Test negative data","outputs":[]},{"kind":2,"language":"jsonata","value":"(\r\n    $neg_data := $loadFile(\"./rules/DDF00050/DDF00050-negative.json\");\r\n    $rule.ddf00050($neg_data)\r\n)","outputs":[{"mime":"text/x-json","value":[{"message":"The study arm references a populationId that does not match the id of any study population or study cohort defined within the same study design as the study arm","parent_id":"InterventionalStudyDesign_1","parent_entity":"InterventionalStudyDesign","id":"StudyArm_1","name":"Placebo","populationId":"StudyDesignPopulation_2","instanceType":"StudyArm"},{"message":"The study arm references a populationId that does not match the id of any study population or study cohort defined within the same study design as the study arm","parent_id":"InterventionalStudyDesign_1","parent_entity":"InterventionalStudyDesign","id":"StudyArm_2","name":"Xanomeline Low Dose","populationId":"StudyCohort_1","instanceType":"StudyArm"},{"message":"The study arm references a populationId that does not match the id of any study population or study cohort defined within the same study design as the study arm","parent_id":"InterventionalStudyDesign_1","parent_entity":"InterventionalStudyDesign","id":"StudyArm_3","name":"Xanomeline High Dose","populationId":"StudyCohort_1","instanceType":"StudyArm"},{"message":"The study arm references a populationId that does not match the id of any study population or study cohort defined within the same study design as the study arm","parent_id":"InterventionalStudyDesign_1","parent_entity":"InterventionalStudyDesign","id":"StudyArm_3","name":"Xanomeline High Dose","populationId":"StudyCohort_2","instanceType":"StudyArm"},{"message":"The study arm references a populationId that does not match the id of any study population or study cohort defined within the same study design as the study arm","parent_id":"InterventionalStudyDesign_1","parent_entity":"InterventionalStudyDesign","id":"StudyArm_3","name":"Xanomeline High Dose","populationId":"StudyCohort_xx","instanceType":"StudyArm"},{"message":"The study arm references a populationId that does not match the id of any study population or study cohort defined within the same study design as the study arm","parent_id":"InterventionalStudyDesign_2","parent_entity":"InterventionalStudyDesign","id":"StudyArm_4","name":"Placebo","populationId":"StudyDesignPopulation_1","instanceType":"StudyArm"}]}]},{"kind":1,"language":"markdown","value":"","outputs":[]}]